@model IEnumerable<EntityFrameworkExample.Models.Barrel>

@{
    ViewBag.Title = "Index";
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $("#myInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            $("#myTable tr").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });
    });
</script>



<div class="container">
    <div class="row">
        <div class="col-sm-12">

        </div>
    </div>

    <div class="row">
        <div class="col-sm-4">
            <h2>Barrels</h2>
        </div>
        <div class="col-sm-4">
            <p>
                @Html.ActionLink("Create New", "Create")
            </p>
        </div>
        <div class="col-sm-4">
            <input id="myInput" type="text" placeholder="Search..">
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <table class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.CurrentLocation)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Contents)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Height)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Radius)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Weight)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ConstructionMaterial)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DateCreated)
                </th>
                <th></th>
            </tr>

            <tbody id="myTable">
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Id)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CurrentLocation)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Contents)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.Height)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Radius)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Weight)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.ConstructionMaterial)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.DateCreated)
                        </td>

                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                        </td>

                    </tr>

                }
            </tbody>
        </table>
    </div>
</div>




